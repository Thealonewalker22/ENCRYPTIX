{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNg8GSTvOPgnMgbgRCrBbMq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"fC34sJzM8KYh","executionInfo":{"status":"ok","timestamp":1722160914754,"user_tz":-330,"elapsed":2162,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":[],"metadata":{"id":"C5wMnSfL-RrF"},"execution_count":null,"outputs":[]},{"source":["import os\n","print(os.getcwd())"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JI79v198-t-F","executionInfo":{"status":"ok","timestamp":1721979564222,"user_tz":-330,"elapsed":482,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"235aecd8-021f-42ac-c744-d64a662daa41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content\n"]}]},{"source":["movie_data = pd.read_csv(\"/content/movie.csv\", encoding=\"latin1\")\n","movie_data"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"-Ce1qFwr_OhJ","executionInfo":{"status":"ok","timestamp":1722160917480,"user_tz":-330,"elapsed":465,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"e667dd5c-30e9-405c-abd2-24714684b3b8"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name    Year Duration            Genre  \\\n","0                                             NaN      NaN            Drama   \n","1      #Gadhvi (He thought he was Gandhi) -2019.0  109 min            Drama   \n","2                             #Homecoming -2021.0   90 min   Drama, Musical   \n","3                                 #Yaaram -2019.0  110 min  Comedy, Romance   \n","4                       ...And Once Again -2010.0  105 min            Drama   \n","...                                   ...     ...      ...              ...   \n","15504                 Zulm Ko Jala Doonga -1988.0      NaN           Action   \n","15505                               Zulmi -1999.0  129 min    Action, Drama   \n","15506                           Zulmi Raj -2005.0      NaN           Action   \n","15507                       Zulmi Shikari -1988.0      NaN           Action   \n","15508                        Zulm-O-Sitam -1998.0  130 min    Action, Drama   \n","\n","       Rating Votes            Director           Actor 1             Actor 2  \\\n","0         NaN   NaN       J.S. Randhawa          Manmauji              Birbal   \n","1         7.0     8       Gaurav Bakshi      Rasika Dugal      Vivek Ghamande   \n","2         NaN   NaN  Soumyajit Majumdar      Sayani Gupta   Plabita Borthakur   \n","3         4.4    35          Ovais Khan           Prateik          Ishita Raj   \n","4         NaN   NaN        Amol Palekar      Rajat Kapoor  Rituparna Sengupta   \n","...       ...   ...                 ...               ...                 ...   \n","15504     4.6    11       Mahendra Shah  Naseeruddin Shah       Sumeet Saigal   \n","15505     4.5   655          Kuku Kohli      Akshay Kumar      Twinkle Khanna   \n","15506     NaN   NaN          Kiran Thej   Sangeeta Tiwari                 NaN   \n","15507     NaN   NaN                 NaN               NaN                 NaN   \n","15508     6.2    20        K.C. Bokadia        Dharmendra          Jaya Prada   \n","\n","               Actor 3  \n","0      Rajendra Bhatia  \n","1        Arvind Jangid  \n","2           Roy Angana  \n","3      Siddhant Kapoor  \n","4          Antara Mali  \n","...                ...  \n","15504    Suparna Anand  \n","15505      Aruna Irani  \n","15506              NaN  \n","15507              NaN  \n","15508      Arjun Sarja  \n","\n","[15509 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-cf904fd0-afa1-4b9d-9896-e95972b127e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>90 min</td>\n","      <td>Drama, Musical</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>105 min</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15504</th>\n","      <td>Zulm Ko Jala Doonga</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>4.6</td>\n","      <td>11</td>\n","      <td>Mahendra Shah</td>\n","      <td>Naseeruddin Shah</td>\n","      <td>Sumeet Saigal</td>\n","      <td>Suparna Anand</td>\n","    </tr>\n","    <tr>\n","      <th>15505</th>\n","      <td>Zulmi</td>\n","      <td>-1999.0</td>\n","      <td>129 min</td>\n","      <td>Action, Drama</td>\n","      <td>4.5</td>\n","      <td>655</td>\n","      <td>Kuku Kohli</td>\n","      <td>Akshay Kumar</td>\n","      <td>Twinkle Khanna</td>\n","      <td>Aruna Irani</td>\n","    </tr>\n","    <tr>\n","      <th>15506</th>\n","      <td>Zulmi Raj</td>\n","      <td>-2005.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Kiran Thej</td>\n","      <td>Sangeeta Tiwari</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15507</th>\n","      <td>Zulmi Shikari</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15508</th>\n","      <td>Zulm-O-Sitam</td>\n","      <td>-1998.0</td>\n","      <td>130 min</td>\n","      <td>Action, Drama</td>\n","      <td>6.2</td>\n","      <td>20</td>\n","      <td>K.C. Bokadia</td>\n","      <td>Dharmendra</td>\n","      <td>Jaya Prada</td>\n","      <td>Arjun Sarja</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15509 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf904fd0-afa1-4b9d-9896-e95972b127e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf904fd0-afa1-4b9d-9896-e95972b127e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf904fd0-afa1-4b9d-9896-e95972b127e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-27a69d0e-5d82-4399-8108-b958d9161385\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-27a69d0e-5d82-4399-8108-b958d9161385')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-27a69d0e-5d82-4399-8108-b958d9161385 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_46f1cc51-1777-4fee-9a0a-5eba78b4e062\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('movie_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_46f1cc51-1777-4fee-9a0a-5eba78b4e062 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('movie_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"movie_data","summary":"{\n  \"name\": \"movie_data\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13838,\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 182,\n        \"samples\": [\n          \"168 min\",\n          \"99 min\",\n          \"179 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Family, Mystery\",\n          \"Comedy, Fantasy, Musical\",\n          \"Action, Adventure, Crime\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2034,\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5938,\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4718,\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4891,\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4820,\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["movie_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":330},"id":"IDCiwo98_cGP","executionInfo":{"status":"ok","timestamp":1722160925891,"user_tz":-330,"elapsed":412,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"11fd6d27-918f-4058-85f4-39811d08975d"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration            Genre  \\\n","0                                         NaN      NaN            Drama   \n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min            Drama   \n","2                         #Homecoming -2021.0   90 min   Drama, Musical   \n","3                             #Yaaram -2019.0  110 min  Comedy, Romance   \n","4                   ...And Once Again -2010.0  105 min            Drama   \n","\n","   Rating Votes            Director       Actor 1             Actor 2  \\\n","0     NaN   NaN       J.S. Randhawa      Manmauji              Birbal   \n","1     7.0     8       Gaurav Bakshi  Rasika Dugal      Vivek Ghamande   \n","2     NaN   NaN  Soumyajit Majumdar  Sayani Gupta   Plabita Borthakur   \n","3     4.4    35          Ovais Khan       Prateik          Ishita Raj   \n","4     NaN   NaN        Amol Palekar  Rajat Kapoor  Rituparna Sengupta   \n","\n","           Actor 3  \n","0  Rajendra Bhatia  \n","1    Arvind Jangid  \n","2       Roy Angana  \n","3  Siddhant Kapoor  \n","4      Antara Mali  "],"text/html":["\n","  <div id=\"df-876db586-c07c-44f8-b7bc-da2304dbe95f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>90 min</td>\n","      <td>Drama, Musical</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>105 min</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-876db586-c07c-44f8-b7bc-da2304dbe95f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-876db586-c07c-44f8-b7bc-da2304dbe95f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-876db586-c07c-44f8-b7bc-da2304dbe95f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ed41075f-c4c4-4bac-b624-ca2e839240f1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed41075f-c4c4-4bac-b624-ca2e839240f1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ed41075f-c4c4-4bac-b624-ca2e839240f1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"movie_data","summary":"{\n  \"name\": \"movie_data\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13838,\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 182,\n        \"samples\": [\n          \"168 min\",\n          \"99 min\",\n          \"179 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 485,\n        \"samples\": [\n          \"Family, Mystery\",\n          \"Comedy, Fantasy, Musical\",\n          \"Action, Adventure, Crime\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2034,\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5938,\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4718,\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4891,\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4820,\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["movie_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OKf_ygqDABCO","executionInfo":{"status":"ok","timestamp":1722160930043,"user_tz":-330,"elapsed":415,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"b5d97a5b-0a8c-4aa0-8d22-dadd012fa8c6"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 15509 entries, 0 to 15508\n","Data columns (total 10 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Name      15509 non-null  object \n"," 1   Year      14981 non-null  float64\n"," 2   Duration  7240 non-null   object \n"," 3   Genre     13632 non-null  object \n"," 4   Rating    7919 non-null   float64\n"," 5   Votes     7920 non-null   object \n"," 6   Director  14984 non-null  object \n"," 7   Actor 1   13892 non-null  object \n"," 8   Actor 2   13125 non-null  object \n"," 9   Actor 3   12365 non-null  object \n","dtypes: float64(2), object(8)\n","memory usage: 1.2+ MB\n"]}]},{"cell_type":"code","source":["movie_data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"3GUtqPyjAEH5","executionInfo":{"status":"ok","timestamp":1722160934965,"user_tz":-330,"elapsed":433,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"a71762c0-ccee-4e6f-9d16-d5e77322c4c2"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Year       Rating\n","count  14981.000000  7919.000000\n","mean   -1987.012215     5.841621\n","std       25.416689     1.381777\n","min    -2022.000000     1.100000\n","25%    -2009.000000     4.900000\n","50%    -1991.000000     6.000000\n","75%    -1968.000000     6.800000\n","max    -1913.000000    10.000000"],"text/html":["\n","  <div id=\"df-24bdfdb8-5025-415a-928e-c5946a957359\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14981.000000</td>\n","      <td>7919.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-1987.012215</td>\n","      <td>5.841621</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.416689</td>\n","      <td>1.381777</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-2022.000000</td>\n","      <td>1.100000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-2009.000000</td>\n","      <td>4.900000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>-1991.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>-1968.000000</td>\n","      <td>6.800000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>-1913.000000</td>\n","      <td>10.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24bdfdb8-5025-415a-928e-c5946a957359')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24bdfdb8-5025-415a-928e-c5946a957359 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24bdfdb8-5025-415a-928e-c5946a957359');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b9c7360-7f83-4de4-ab84-04d4244634c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b9c7360-7f83-4de4-ab84-04d4244634c8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b9c7360-7f83-4de4-ab84-04d4244634c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movie_data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5937.609745721985,\n        \"min\": -2022.0,\n        \"max\": 14981.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -1987.0122154729324,\n          -1991.0,\n          14981.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2797.9713272009612,\n        \"min\": 1.1,\n        \"max\": 7919.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.841621416845562,\n          6.0,\n          7919.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["movie_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dPaiK4_9ALhS","executionInfo":{"status":"ok","timestamp":1722160937311,"user_tz":-330,"elapsed":10,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"a2f937ca-7267-4a80-e5aa-d32093e67587"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name           0\n","Year         528\n","Duration    8269\n","Genre       1877\n","Rating      7590\n","Votes       7589\n","Director     525\n","Actor 1     1617\n","Actor 2     2384\n","Actor 3     3144\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["movie_data.dropna(subset=['Actor 1', 'Actor 2', 'Actor 3', 'Director','Genre'],inplace=True)"],"metadata":{"id":"N42K1NM4Abqr","executionInfo":{"status":"ok","timestamp":1722160940662,"user_tz":-330,"elapsed":418,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["movie_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B03v3uh3yO9k","executionInfo":{"status":"ok","timestamp":1722160982167,"user_tz":-330,"elapsed":411,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"33819a16-fcc4-4562-b4af-23faa64fca7e"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name           0\n","Year         282\n","Duration    4839\n","Genre          0\n","Rating      3810\n","Votes       3809\n","Director       0\n","Actor 1        0\n","Actor 2        0\n","Actor 3        0\n","dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["movie_data.dropna(subset=[\"Rating\"],inplace=True)"],"metadata":{"id":"z9dCqPyVyySU","executionInfo":{"status":"ok","timestamp":1722161055750,"user_tz":-330,"elapsed":393,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["movie_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0xR6Ox_NzEQX","executionInfo":{"status":"ok","timestamp":1722161081396,"user_tz":-330,"elapsed":389,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"0eb0fa04-ba48-46fc-83ac-cb0b74b3003c"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name           0\n","Year           0\n","Duration    1899\n","Genre          0\n","Rating         0\n","Votes          0\n","Director       0\n","Actor 1        0\n","Actor 2        0\n","Actor 3        0\n","dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["movie_data.dropna(subset=['Actor 1', 'Actor 2', 'Actor 3', 'Director','Genre'],inplace=True)"],"metadata":{"id":"duDiyXmZzKhN","executionInfo":{"status":"ok","timestamp":1722161121102,"user_tz":-330,"elapsed":399,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["movie_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iaNyzqsLzUNi","executionInfo":{"status":"ok","timestamp":1722161137512,"user_tz":-330,"elapsed":384,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"de0cadff-4092-4ba3-c664-96ea8c20646f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name           0\n","Year           0\n","Duration    1899\n","Genre          0\n","Rating         0\n","Votes          0\n","Director       0\n","Actor 1        0\n","Actor 2        0\n","Actor 3        0\n","dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["movie_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"VApAReFwzYOE","executionInfo":{"status":"ok","timestamp":1722161154341,"user_tz":-330,"elapsed":434,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"6a03c379-9ecb-47bb-dfc4-d50d09cc362d"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration  \\\n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min   \n","3                             #Yaaram -2019.0  110 min   \n","5                ...Aur Pyaar Ho Gaya -1997.0  147 min   \n","6                           ...Yahaan -2005.0  142 min   \n","8                  ?: A Question Mark -2012.0   82 min   \n","\n","                       Genre  Rating  Votes        Director          Actor 1  \\\n","1                      Drama     7.0      8   Gaurav Bakshi     Rasika Dugal   \n","3            Comedy, Romance     4.4     35      Ovais Khan          Prateik   \n","5     Comedy, Drama, Musical     4.7    827    Rahul Rawail       Bobby Deol   \n","6        Drama, Romance, War     7.4  1,086  Shoojit Sircar  Jimmy Sheirgill   \n","8  Horror, Mystery, Thriller     5.6    326   Allyson Patel        Yash Dave   \n","\n","                  Actor 2          Actor 3  \n","1          Vivek Ghamande    Arvind Jangid  \n","3              Ishita Raj  Siddhant Kapoor  \n","5  Aishwarya Rai Bachchan    Shammi Kapoor  \n","6          Minissha Lamba   Yashpal Sharma  \n","8          Muntazir Ahmad     Kiran Bhatia  "],"text/html":["\n","  <div id=\"df-e2c0d135-685e-452c-a3e4-713eb19cd5e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>-1997.0</td>\n","      <td>147 min</td>\n","      <td>Comedy, Drama, Musical</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>...Yahaan</td>\n","      <td>-2005.0</td>\n","      <td>142 min</td>\n","      <td>Drama, Romance, War</td>\n","      <td>7.4</td>\n","      <td>1,086</td>\n","      <td>Shoojit Sircar</td>\n","      <td>Jimmy Sheirgill</td>\n","      <td>Minissha Lamba</td>\n","      <td>Yashpal Sharma</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>?: A Question Mark</td>\n","      <td>-2012.0</td>\n","      <td>82 min</td>\n","      <td>Horror, Mystery, Thriller</td>\n","      <td>5.6</td>\n","      <td>326</td>\n","      <td>Allyson Patel</td>\n","      <td>Yash Dave</td>\n","      <td>Muntazir Ahmad</td>\n","      <td>Kiran Bhatia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2c0d135-685e-452c-a3e4-713eb19cd5e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2c0d135-685e-452c-a3e4-713eb19cd5e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2c0d135-685e-452c-a3e4-713eb19cd5e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ca505b7f-cc0e-48de-a4b3-ebbfee4e5748\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca505b7f-cc0e-48de-a4b3-ebbfee4e5748')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ca505b7f-cc0e-48de-a4b3-ebbfee4e5748 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"movie_data","summary":"{\n  \"name\": \"movie_data\",\n  \"rows\": 7558,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7038,\n        \"samples\": [\n          \"Khoon aur Sazaa\",\n          \"Ada... A Way of Life\",\n          \"Arpan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.00471144544447,\n        \"min\": -2021.0,\n        \"max\": -1917.0,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          -1977.0,\n          -1998.0,\n          -1992.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 174,\n        \"samples\": [\n          \"197 min\",\n          \"247 min\",\n          \"86 min\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 416,\n        \"samples\": [\n          \"Action, Crime, Musical\",\n          \"Musical, Thriller\",\n          \"Crime, Drama, Sport\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3682554917066723,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          1.9,\n          7.0,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2030,\n        \"samples\": [\n          \"1,273\",\n          \"667\",\n          \"14,142\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2956,\n        \"samples\": [\n          \"Prakash Satam\",\n          \"Sharankumar Chand\",\n          \"Shahab Shamsi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2415,\n        \"samples\": [\n          \"Dilip Dhawan\",\n          \"Kamini Kaushal\",\n          \"Vinay Subramanian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2783,\n        \"samples\": [\n          \"Sasha Aagha\",\n          \"Sonika Chopra\",\n          \"Tanmay Ssingh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3031,\n        \"samples\": [\n          \"Bill 'Blade' Howell\",\n          \"Satyendra Kapoor\",\n          \"Irfan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"source":["# Check for typos and confirm the actual column name.\n","print(movie_data.columns)\n","\n","# Assuming the column name is 'Votes', try the following:\n","movie_data['Votes'] = movie_data['Votes'].str.replace(',','').astype(int)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6M9KV4yVz9nm","executionInfo":{"status":"ok","timestamp":1722161296231,"user_tz":-330,"elapsed":1739,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"90e9d110-0d33-4603-fdcf-39f5fcc159fc"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Name', 'Year', 'Duration', 'Genre', 'Rating', 'Votes', 'Director',\n","       'Actor 1', 'Actor 2', 'Actor 3'],\n","      dtype='object')\n"]}]},{"source":["# Convert 'Year' column to string type first\n","movie_data['Year'] = movie_data['Year'].astype(str).str.strip('()')\n","\n","# Remove any leading '-' characters and convert to float\n","movie_data['Year'] = movie_data['Year'].str.lstrip('-').astype(float)\n","\n","# Convert to integer (this will truncate any decimals)\n","movie_data['Year'] = movie_data['Year'].astype(int)"],"cell_type":"code","metadata":{"id":"6ORQebvo0jgt","executionInfo":{"status":"ok","timestamp":1722161453477,"user_tz":-330,"elapsed":404,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["movie_data['Duration'] = movie_data['Duration'].str.strip('min')"],"metadata":{"id":"samMj6qs0akX","executionInfo":{"status":"ok","timestamp":1722161518980,"user_tz":-330,"elapsed":408,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["movie_data['Duration'] .fillna(movie_data['Duration'].median(),inplace=True)"],"metadata":{"id":"mRhD3H3001WP","executionInfo":{"status":"ok","timestamp":1722161585620,"user_tz":-330,"elapsed":392,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["movie_data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQi_Q7S21Fny","executionInfo":{"status":"ok","timestamp":1722161611752,"user_tz":-330,"elapsed":409,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"4ddf9f4c-8c01-49e3-8469-b3fea869cf3d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name        0\n","Year        0\n","Duration    0\n","Genre       0\n","Rating      0\n","Votes       0\n","Director    0\n","Actor 1     0\n","Actor 2     0\n","Actor 3     0\n","dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["movie_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YD3QyuPY1Npa","executionInfo":{"status":"ok","timestamp":1722161635807,"user_tz":-330,"elapsed":9,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"39ecf79c-3c3f-4e8e-ce41-fd3296870340"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 7558 entries, 1 to 15508\n","Data columns (total 10 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Name      7558 non-null   object \n"," 1   Year      7558 non-null   int64  \n"," 2   Duration  7558 non-null   object \n"," 3   Genre     7558 non-null   object \n"," 4   Rating    7558 non-null   float64\n"," 5   Votes     7558 non-null   int64  \n"," 6   Director  7558 non-null   object \n"," 7   Actor 1   7558 non-null   object \n"," 8   Actor 2   7558 non-null   object \n"," 9   Actor 3   7558 non-null   object \n","dtypes: float64(1), int64(2), object(7)\n","memory usage: 649.5+ KB\n"]}]},{"cell_type":"code","source":["movie_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"lEe9OtbL1Rrs","executionInfo":{"status":"ok","timestamp":1722161654823,"user_tz":-330,"elapsed":431,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"c9372ae2-72b4-40c0-dd54-4120bbfee71e"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name  Year Duration  \\\n","1  #Gadhvi (He thought he was Gandhi)  2019     109    \n","3                             #Yaaram  2019     110    \n","5                ...Aur Pyaar Ho Gaya  1997     147    \n","6                           ...Yahaan  2005     142    \n","8                  ?: A Question Mark  2012      82    \n","\n","                       Genre  Rating  Votes        Director          Actor 1  \\\n","1                      Drama     7.0      8   Gaurav Bakshi     Rasika Dugal   \n","3            Comedy, Romance     4.4     35      Ovais Khan          Prateik   \n","5     Comedy, Drama, Musical     4.7    827    Rahul Rawail       Bobby Deol   \n","6        Drama, Romance, War     7.4   1086  Shoojit Sircar  Jimmy Sheirgill   \n","8  Horror, Mystery, Thriller     5.6    326   Allyson Patel        Yash Dave   \n","\n","                  Actor 2          Actor 3  \n","1          Vivek Ghamande    Arvind Jangid  \n","3              Ishita Raj  Siddhant Kapoor  \n","5  Aishwarya Rai Bachchan    Shammi Kapoor  \n","6          Minissha Lamba   Yashpal Sharma  \n","8          Muntazir Ahmad     Kiran Bhatia  "],"text/html":["\n","  <div id=\"df-56ea3cf4-feb0-43f3-96ee-575df4ade499\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>2019</td>\n","      <td>109</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>2019</td>\n","      <td>110</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>1997</td>\n","      <td>147</td>\n","      <td>Comedy, Drama, Musical</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>...Yahaan</td>\n","      <td>2005</td>\n","      <td>142</td>\n","      <td>Drama, Romance, War</td>\n","      <td>7.4</td>\n","      <td>1086</td>\n","      <td>Shoojit Sircar</td>\n","      <td>Jimmy Sheirgill</td>\n","      <td>Minissha Lamba</td>\n","      <td>Yashpal Sharma</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>?: A Question Mark</td>\n","      <td>2012</td>\n","      <td>82</td>\n","      <td>Horror, Mystery, Thriller</td>\n","      <td>5.6</td>\n","      <td>326</td>\n","      <td>Allyson Patel</td>\n","      <td>Yash Dave</td>\n","      <td>Muntazir Ahmad</td>\n","      <td>Kiran Bhatia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56ea3cf4-feb0-43f3-96ee-575df4ade499')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-56ea3cf4-feb0-43f3-96ee-575df4ade499 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-56ea3cf4-feb0-43f3-96ee-575df4ade499');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-254428c6-7ae1-4e7c-a5ad-ce6a635e8e48\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-254428c6-7ae1-4e7c-a5ad-ce6a635e8e48')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-254428c6-7ae1-4e7c-a5ad-ce6a635e8e48 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"movie_data","summary":"{\n  \"name\": \"movie_data\",\n  \"rows\": 7558,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7038,\n        \"samples\": [\n          \"Khoon aur Sazaa\",\n          \"Ada... A Way of Life\",\n          \"Arpan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 1917,\n        \"max\": 2021,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          1977,\n          1998,\n          1992\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"197 \",\n          \"247 \",\n          \"91 \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 416,\n        \"samples\": [\n          \"Action, Crime, Musical\",\n          \"Musical, Thriller\",\n          \"Crime, Drama, Sport\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3682554917066723,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          1.9,\n          7.0,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11868,\n        \"min\": 5,\n        \"max\": 591417,\n        \"num_unique_values\": 2030,\n        \"samples\": [\n          1273,\n          667,\n          14142\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2956,\n        \"samples\": [\n          \"Prakash Satam\",\n          \"Sharankumar Chand\",\n          \"Shahab Shamsi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2415,\n        \"samples\": [\n          \"Dilip Dhawan\",\n          \"Kamini Kaushal\",\n          \"Vinay Subramanian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2783,\n        \"samples\": [\n          \"Sasha Aagha\",\n          \"Sonika Chopra\",\n          \"Tanmay Ssingh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3031,\n        \"samples\": [\n          \"Bill 'Blade' Howell\",\n          \"Satyendra Kapoor\",\n          \"Irfan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["top_movie = movie_data.loc[movie_data['Rating'].sort_values(ascending=False)[:10].index]\n","top_movie"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":608},"id":"hckV2wZs1WgQ","executionInfo":{"status":"ok","timestamp":1722161735309,"user_tz":-330,"elapsed":446,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"e6e4525c-116c-4bfb-9484-cecba8bd147d"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Name  Year Duration                   Genre  Rating  \\\n","8339       Love Qubool Hai  2020      94           Drama, Romance    10.0   \n","5410            Half Songs  2021      79           Music, Romance     9.7   \n","2563                 Breed  2020    135.0                   Drama     9.6   \n","14222  The Reluctant Crime  2020     113                    Drama     9.4   \n","5077          Gho Gho Rani  2019     105         History, Romance     9.4   \n","6852                  June  2021      93                    Drama     9.4   \n","12673   Secrets of Sinauli  2021      56     Documentary, History     9.3   \n","5125           God of gods  2019      90              Documentary     9.3   \n","8344          Love Sorries  2021     101   Comedy, Drama, Romance     9.3   \n","1314          Ashok Vatika  2018      97                    Drama     9.3   \n","\n","       Votes         Director            Actor 1          Actor 2  \\\n","8339       5  Saif Ali Sayeed          Ahaan Jha   Mahesh Narayan   \n","5410       7      Sriram Raja       Raj Banerjee  Emon Chatterjee   \n","2563      48      Bobby Kumar        Bobby Kumar           Ashfaq   \n","14222     16    Arvind Pratap    Dharmendra Ahir   Awanish Kotnal   \n","5077      47     Munni Pankaj  Nishi Neha Mishra     Pankaj Kamal   \n","6852      18   Suhrud Godbole     Vaibhav Khisti   Nilesh Divekar   \n","12673   1373   Raghav Jairath     Manoj Bajpayee       R.S. Bhist   \n","5125      46     Venkatesh Bk  Tejaswini Manogna    Triyug Mantri   \n","8344      79     Gautam Joshi   Prashant Chaubey  Puneet Chouksey   \n","1314       7    Rahul Mallick         Kunj Anand   Sanjay Bishnoi   \n","\n","                   Actor 3  \n","8339   Rajasree Rajakumari  \n","5410     Purshottam Mulani  \n","2563        Fasih Choudhry  \n","14222         Rakhi Mansha  \n","5077           Akash Kumar  \n","6852        Jitendra Joshi  \n","12673           K.N. Dixit  \n","5125       Raj Singh Verma  \n","8344         Amitabh Gupta  \n","1314          Paras Zutshi  "],"text/html":["\n","  <div id=\"df-1ad747c6-0b47-4ce3-b794-9168d6e00e95\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8339</th>\n","      <td>Love Qubool Hai</td>\n","      <td>2020</td>\n","      <td>94</td>\n","      <td>Drama, Romance</td>\n","      <td>10.0</td>\n","      <td>5</td>\n","      <td>Saif Ali Sayeed</td>\n","      <td>Ahaan Jha</td>\n","      <td>Mahesh Narayan</td>\n","      <td>Rajasree Rajakumari</td>\n","    </tr>\n","    <tr>\n","      <th>5410</th>\n","      <td>Half Songs</td>\n","      <td>2021</td>\n","      <td>79</td>\n","      <td>Music, Romance</td>\n","      <td>9.7</td>\n","      <td>7</td>\n","      <td>Sriram Raja</td>\n","      <td>Raj Banerjee</td>\n","      <td>Emon Chatterjee</td>\n","      <td>Purshottam Mulani</td>\n","    </tr>\n","    <tr>\n","      <th>2563</th>\n","      <td>Breed</td>\n","      <td>2020</td>\n","      <td>135.0</td>\n","      <td>Drama</td>\n","      <td>9.6</td>\n","      <td>48</td>\n","      <td>Bobby Kumar</td>\n","      <td>Bobby Kumar</td>\n","      <td>Ashfaq</td>\n","      <td>Fasih Choudhry</td>\n","    </tr>\n","    <tr>\n","      <th>14222</th>\n","      <td>The Reluctant Crime</td>\n","      <td>2020</td>\n","      <td>113</td>\n","      <td>Drama</td>\n","      <td>9.4</td>\n","      <td>16</td>\n","      <td>Arvind Pratap</td>\n","      <td>Dharmendra Ahir</td>\n","      <td>Awanish Kotnal</td>\n","      <td>Rakhi Mansha</td>\n","    </tr>\n","    <tr>\n","      <th>5077</th>\n","      <td>Gho Gho Rani</td>\n","      <td>2019</td>\n","      <td>105</td>\n","      <td>History, Romance</td>\n","      <td>9.4</td>\n","      <td>47</td>\n","      <td>Munni Pankaj</td>\n","      <td>Nishi Neha Mishra</td>\n","      <td>Pankaj Kamal</td>\n","      <td>Akash Kumar</td>\n","    </tr>\n","    <tr>\n","      <th>6852</th>\n","      <td>June</td>\n","      <td>2021</td>\n","      <td>93</td>\n","      <td>Drama</td>\n","      <td>9.4</td>\n","      <td>18</td>\n","      <td>Suhrud Godbole</td>\n","      <td>Vaibhav Khisti</td>\n","      <td>Nilesh Divekar</td>\n","      <td>Jitendra Joshi</td>\n","    </tr>\n","    <tr>\n","      <th>12673</th>\n","      <td>Secrets of Sinauli</td>\n","      <td>2021</td>\n","      <td>56</td>\n","      <td>Documentary, History</td>\n","      <td>9.3</td>\n","      <td>1373</td>\n","      <td>Raghav Jairath</td>\n","      <td>Manoj Bajpayee</td>\n","      <td>R.S. Bhist</td>\n","      <td>K.N. Dixit</td>\n","    </tr>\n","    <tr>\n","      <th>5125</th>\n","      <td>God of gods</td>\n","      <td>2019</td>\n","      <td>90</td>\n","      <td>Documentary</td>\n","      <td>9.3</td>\n","      <td>46</td>\n","      <td>Venkatesh Bk</td>\n","      <td>Tejaswini Manogna</td>\n","      <td>Triyug Mantri</td>\n","      <td>Raj Singh Verma</td>\n","    </tr>\n","    <tr>\n","      <th>8344</th>\n","      <td>Love Sorries</td>\n","      <td>2021</td>\n","      <td>101</td>\n","      <td>Comedy, Drama, Romance</td>\n","      <td>9.3</td>\n","      <td>79</td>\n","      <td>Gautam Joshi</td>\n","      <td>Prashant Chaubey</td>\n","      <td>Puneet Chouksey</td>\n","      <td>Amitabh Gupta</td>\n","    </tr>\n","    <tr>\n","      <th>1314</th>\n","      <td>Ashok Vatika</td>\n","      <td>2018</td>\n","      <td>97</td>\n","      <td>Drama</td>\n","      <td>9.3</td>\n","      <td>7</td>\n","      <td>Rahul Mallick</td>\n","      <td>Kunj Anand</td>\n","      <td>Sanjay Bishnoi</td>\n","      <td>Paras Zutshi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ad747c6-0b47-4ce3-b794-9168d6e00e95')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ad747c6-0b47-4ce3-b794-9168d6e00e95 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ad747c6-0b47-4ce3-b794-9168d6e00e95');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-86a56aea-f81b-47ff-98fe-a90163c6415b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-86a56aea-f81b-47ff-98fe-a90163c6415b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-86a56aea-f81b-47ff-98fe-a90163c6415b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_830efbda-4782-4dca-9e84-388bcc26a379\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_movie')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_830efbda-4782-4dca-9e84-388bcc26a379 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_movie');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_movie","summary":"{\n  \"name\": \"top_movie\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Love Sorries\",\n          \"Half Songs\",\n          \"June\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2018,\n        \"max\": 2021,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2021,\n          2018,\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"101 \",\n          \"79 \",\n          \"93 \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Drama, Romance\",\n          \"Music, Romance\",\n          \"Documentary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23118054512532898,\n        \"min\": 9.3,\n        \"max\": 10.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9.7,\n          9.3,\n          9.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 425,\n        \"min\": 5,\n        \"max\": 1373,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          46,\n          7,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Gautam Joshi\",\n          \"Sriram Raja\",\n          \"Suhrud Godbole\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Prashant Chaubey\",\n          \"Raj Banerjee\",\n          \"Vaibhav Khisti\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Puneet Chouksey\",\n          \"Emon Chatterjee\",\n          \"Nilesh Divekar\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Amitabh Gupta\",\n          \"Purshottam Mulani\",\n          \"Jitendra Joshi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"source":["sns.histplot(data=top_movie, x=\"Year\",hue=\"Rating\", multiple=\"stack\")\n","plt.title('Distribution of top 10 movies', fontsize=16)\n","plt.xlabel('Year', fontsize=14)\n","plt.ylabel('Count', fontsize=14)\n","plt.tight_layout() # removed extra plt.\n","plt.show()"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"yhpZdeA32mVX","executionInfo":{"status":"ok","timestamp":1722161985396,"user_tz":-330,"elapsed":1201,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"483abb4c-1d23-4d87-bdf1-4f5abedb2e65"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["genre_counts = movie_data['Genre'].value_counts().reset_index()\n","genre_counts.columns = ['Genre', 'Count']\n","\n","top_n_genres = genre_counts.head(5)\n","top_n_genres"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DTxaKFvR2btb","executionInfo":{"status":"ok","timestamp":1722162092546,"user_tz":-330,"elapsed":706,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"860b9d53-f485-42b0-b909-937b9bfd7862"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  Genre  Count\n","0                 Drama   1137\n","1        Drama, Romance    443\n","2  Action, Crime, Drama    417\n","3                Action    391\n","4         Drama, Family    291"],"text/html":["\n","  <div id=\"df-0f1665a7-c4a1-4271-9e99-be57b4f636e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Genre</th>\n","      <th>Count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Drama</td>\n","      <td>1137</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Drama, Romance</td>\n","      <td>443</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Action, Crime, Drama</td>\n","      <td>417</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Action</td>\n","      <td>391</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Drama, Family</td>\n","      <td>291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f1665a7-c4a1-4271-9e99-be57b4f636e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f1665a7-c4a1-4271-9e99-be57b4f636e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f1665a7-c4a1-4271-9e99-be57b4f636e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cab6b21a-b767-4357-b1c1-dd3a4f62fa54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cab6b21a-b767-4357-b1c1-dd3a4f62fa54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cab6b21a-b767-4357-b1c1-dd3a4f62fa54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8bbc8253-185a-48a7-b51f-4229211b66a3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_n_genres')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8bbc8253-185a-48a7-b51f-4229211b66a3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_n_genres');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_n_genres","summary":"{\n  \"name\": \"top_n_genres\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Drama, Romance\",\n          \"Drama, Family\",\n          \"Action, Crime, Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 340,\n        \"min\": 291,\n        \"max\": 1137,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          443,\n          291,\n          417\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["plt.figure(figsize=(4, 4))\n","plt.pie(top_n_genres['Count'], labels=top_n_genres['Genre'], autopct='%1.1f%%', startangle=140)\n","plt.title('Top 5 Genres')\n","plt.axis('equal')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"ZEZ6CUIC3BTZ","executionInfo":{"status":"ok","timestamp":1722162162832,"user_tz":-330,"elapsed":718,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"b81256c4-bb6a-4e84-90a8-dea820c3393a"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["director_avg_rating = movie_data.groupby('Director')['Rating'].mean().reset_index()\n","director_avg_rating = director_avg_rating.sort_values(by='Rating', ascending=False)\n","\n","top_directors = director_avg_rating.head(10)\n","top_directors\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"oaXwlG5Y3UCG","executionInfo":{"status":"ok","timestamp":1722162261876,"user_tz":-330,"elapsed":458,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"00570f56-4dcb-4496-b817-300393da0272"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Director  Rating\n","2243  Saif Ali Sayeed    10.0\n","2560      Sriram Raja     9.7\n","504       Bobby Kumar     9.6\n","322     Arvind Pratap     9.4\n","1513     Munni Pankaj     9.4\n","2598   Suhrud Godbole     9.4\n","1601     Nikhil Mahar     9.3\n","2809     Venkatesh Bk     9.3\n","1879    Rahul Mallick     9.3\n","1864   Raghav Jairath     9.3"],"text/html":["\n","  <div id=\"df-271ebea0-44f6-4915-ad9f-4dd12cbe00c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Director</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2243</th>\n","      <td>Saif Ali Sayeed</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>2560</th>\n","      <td>Sriram Raja</td>\n","      <td>9.7</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>Bobby Kumar</td>\n","      <td>9.6</td>\n","    </tr>\n","    <tr>\n","      <th>322</th>\n","      <td>Arvind Pratap</td>\n","      <td>9.4</td>\n","    </tr>\n","    <tr>\n","      <th>1513</th>\n","      <td>Munni Pankaj</td>\n","      <td>9.4</td>\n","    </tr>\n","    <tr>\n","      <th>2598</th>\n","      <td>Suhrud Godbole</td>\n","      <td>9.4</td>\n","    </tr>\n","    <tr>\n","      <th>1601</th>\n","      <td>Nikhil Mahar</td>\n","      <td>9.3</td>\n","    </tr>\n","    <tr>\n","      <th>2809</th>\n","      <td>Venkatesh Bk</td>\n","      <td>9.3</td>\n","    </tr>\n","    <tr>\n","      <th>1879</th>\n","      <td>Rahul Mallick</td>\n","      <td>9.3</td>\n","    </tr>\n","    <tr>\n","      <th>1864</th>\n","      <td>Raghav Jairath</td>\n","      <td>9.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-271ebea0-44f6-4915-ad9f-4dd12cbe00c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-271ebea0-44f6-4915-ad9f-4dd12cbe00c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-271ebea0-44f6-4915-ad9f-4dd12cbe00c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f606cec9-ba66-4b92-a186-e04f6a4909b2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f606cec9-ba66-4b92-a186-e04f6a4909b2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f606cec9-ba66-4b92-a186-e04f6a4909b2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ad3ea29c-cc54-43ca-8c36-6845aca5b48e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_directors')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ad3ea29c-cc54-43ca-8c36-6845aca5b48e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_directors');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_directors","summary":"{\n  \"name\": \"top_directors\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Rahul Mallick\",\n          \"Sriram Raja\",\n          \"Suhrud Godbole\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23118054512532898,\n        \"min\": 9.3,\n        \"max\": 10.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9.7,\n          9.3,\n          9.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.barplot(x='Director', y='Rating', data=top_directors)\n","plt.xticks(rotation=90)\n","plt.xlabel('Director')\n","plt.ylabel('Average Rating')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"Vcm4Y3Lk3tVU","executionInfo":{"status":"ok","timestamp":1722162289253,"user_tz":-330,"elapsed":585,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"d193f860-2306-4ff7-fc64-d74ae205fac3"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Average Rating')"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.lineplot(data=movie_data, x='Rating', y='Votes')\n","plt.title('Rating vs. Votes')\n","plt.xlabel('Rating')\n","plt.ylabel('Votes')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":372},"id":"LHOR0TTm3zql","executionInfo":{"status":"ok","timestamp":1722162411330,"user_tz":-330,"elapsed":3602,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"398c2d80-1325-44ac-c324-4941c945d66c"},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"source":["actor_counts = movie_data['Actor 1'].value_counts().reset_index()\n","actor_counts.columns = ['Actor', 'MovieCount']\n","\n","\n","\n","top_n_actors = actor_counts.head(10)\n","top_n_actors # changed from top_n to top_n_actors"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"ing0GgQE4hyL","executionInfo":{"status":"ok","timestamp":1722162490604,"user_tz":-330,"elapsed":444,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"afc4860f-2851-420b-cb55-8fe9a7b2bd72"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Actor  MovieCount\n","0           Jeetendra         140\n","1          Dharmendra         134\n","2  Mithun Chakraborty         130\n","3         Ashok Kumar         125\n","4       Rajesh Khanna         118\n","5    Amitabh Bachchan         116\n","6           Dev Anand          90\n","7       Shashi Kapoor          88\n","8        Akshay Kumar          82\n","9         Sanjay Dutt          73"],"text/html":["\n","  <div id=\"df-e42733ec-0495-44df-8bb8-16288cf4208f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actor</th>\n","      <th>MovieCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Jeetendra</td>\n","      <td>140</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Dharmendra</td>\n","      <td>134</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mithun Chakraborty</td>\n","      <td>130</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Ashok Kumar</td>\n","      <td>125</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Rajesh Khanna</td>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Amitabh Bachchan</td>\n","      <td>116</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Dev Anand</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Shashi Kapoor</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Akshay Kumar</td>\n","      <td>82</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Sanjay Dutt</td>\n","      <td>73</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e42733ec-0495-44df-8bb8-16288cf4208f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e42733ec-0495-44df-8bb8-16288cf4208f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e42733ec-0495-44df-8bb8-16288cf4208f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f6ce6d89-1a0e-425b-93fa-b4bfed4025e4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f6ce6d89-1a0e-425b-93fa-b4bfed4025e4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f6ce6d89-1a0e-425b-93fa-b4bfed4025e4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9872bcd6-c339-4bdc-8851-4d75a6894f61\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_n_actors')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9872bcd6-c339-4bdc-8851-4d75a6894f61 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('top_n_actors');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"top_n_actors","summary":"{\n  \"name\": \"top_n_actors\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Actor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Akshay Kumar\",\n          \"Dharmendra\",\n          \"Amitabh Bachchan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MovieCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 73,\n        \"max\": 140,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          82,\n          134,\n          116\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.barplot(x='Actor', y='MovieCount', data=top_n_actors)\n","plt.xticks(rotation=90)\n","plt.xlabel('Actor')\n","plt.ylabel('Movie Count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"7o_5AQao4kzJ","executionInfo":{"status":"ok","timestamp":1722162516596,"user_tz":-330,"elapsed":757,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"86010de8-1d87-42d2-f95b-8c2927cfb7ad"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Movie Count')"]},"metadata":{},"execution_count":37},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"source":["yearly_movie_count = movie_data.groupby('Year').size().reset_index(name='MovieCount')\n","yearly_movie_count.columns = ['Year', 'MovieCount'] # changed from yearly_movie_counts to yearly_movie_count\n","\n","yearly_movie_count = yearly_movie_count.sort_values(by='Year')\n","yearly_movie_count"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"x1X_7g6P5EDm","executionInfo":{"status":"ok","timestamp":1722162629532,"user_tz":-330,"elapsed":530,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"0a315b23-9730-43f6-d630-f206021b6acd"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Year  MovieCount\n","0   1917           1\n","1   1931           3\n","2   1932           2\n","3   1933           4\n","4   1934           2\n","..   ...         ...\n","87  2017         223\n","88  2018         214\n","89  2019         238\n","90  2020         157\n","91  2021          69\n","\n","[92 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-28aaaba9-81cb-4dc9-a58c-c456c437ba87\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>MovieCount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1917</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1931</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1932</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1933</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1934</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>2017</td>\n","      <td>223</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>2018</td>\n","      <td>214</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>2019</td>\n","      <td>238</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>2020</td>\n","      <td>157</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>2021</td>\n","      <td>69</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>92 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28aaaba9-81cb-4dc9-a58c-c456c437ba87')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28aaaba9-81cb-4dc9-a58c-c456c437ba87 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28aaaba9-81cb-4dc9-a58c-c456c437ba87');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1c518d28-c6c7-494d-82f1-e5b7095c804c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c518d28-c6c7-494d-82f1-e5b7095c804c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1c518d28-c6c7-494d-82f1-e5b7095c804c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a44a702c-9265-413c-8c3c-4e9be1215a67\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('yearly_movie_count')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a44a702c-9265-413c-8c3c-4e9be1215a67 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('yearly_movie_count');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"yearly_movie_count","summary":"{\n  \"name\": \"yearly_movie_count\",\n  \"rows\": 92,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 1917,\n        \"max\": 2021,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          1970,\n          1952,\n          1985\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MovieCount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59,\n        \"min\": 1,\n        \"max\": 238,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          117,\n          37,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.lineplot(data=yearly_movie_count, x='Year', y='MovieCount')\n","plt.title('Yearly Movie Count')\n","plt.xlabel('Year')\n","plt.ylabel('Movie Count')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":381},"id":"ybJ0Le_94-by","executionInfo":{"status":"ok","timestamp":1722162667569,"user_tz":-330,"elapsed":715,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"76b7790a-dc52-423b-b42a-2fdc9e313100"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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tdde05YtW7Rq1aouWyesr6NZ/La0tDTZbLYW28kirqQzcpiVlaVp06YpOTlZf//733Xw4EEtXrxYdvs/XkJnz56twsJC7d27V7t379b777+vhx9+uEvWiO6hM7I4d+5cFRUVadeuXcrPz1dKSoruu+8+5ebmusaQRbRn//79WrRokT7++GPt3btXDQ0NSk5OdsvZ0qVL9c4772j79u3av3+/SktLlZKS4trvyWtvSUmJZsyYocmTJysvL09LlizRgw8+qD179nTpemFdnZHFnJwcRURE6I033lBhYaF+/etfa8WKFVq/fr1rjM9k0cBnSTI7d+50/VxUVGQkmYKCAte2pqYmEx4ebjZu3Njmcd566y0TGBhoGhoajDHGvPvuu8Zut5vy8nLXmJdfftk4HA5TV1fX+QtBt9eRLObm5pobb7zRlJWVtTgOWcTVuNYcJiQkmJUrV7Z53M8++8xIMgcPHnRt++tf/2psNpv58ssvO3cR8AnXmsXevXub119/3e1YYWFhrjFkEVeroqLCSDL79+83xhhTVVVlAgICzPbt211jPv/8cyPJZGVlGWM8e+1dvny5GTlypNtz3X///Wbq1KnXe0nopq4li6157LHHzOTJk10/+0oWOdPeg9TV1UmSgoODXdvsdruCgoJ04MCBNh9XXV0th8Mhf39/SZfPOo0aNUqRkZGuMVOnTlVNTY0KCwuv0+zhSzzN4oULF/TAAw9ow4YNioqKanEcsoiO8CSHFRUVys7OVkREhCZNmqTIyEjdddddbjnNyspSaGioJkyY4NqWlJQku92u7OzsLloNujNPfydOmjRJ27ZtU2VlpZxOp7Zu3apLly7phz/8oSSyiKvX/PHHsLAwSZfPXDY0NCgpKck15uabb9agQYOUlZUlybPX3qysLLdjNI9pPgbwXdeSxbaO03wMyXeySGnvQZqDvmLFCn399deqr6/Xc889p1OnTqmsrKzVx5w5c0bPPvus21vrysvL3X5RS3L9XF5efv0WAJ/haRaXLl2qSZMm6Z577mn1OGQRHeFJDo8dOyZJevrpp/XQQw8pPT1d48aN05QpU1yfNy4vL1dERITbsf39/RUWFkYO4RFPfye+9dZbamho0IABAxQUFKSFCxdq586dGjZsmCSyiKvjdDq1ZMkS3XbbbYqPj5d0OUOBgYEKDQ11GxsZGenKkCev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\n"},"metadata":{}}]},{"cell_type":"code","source":["filtered_df = movie_data[(movie_data['Rating'] > 8) & (movie_data['Votes'] > 10000)]\n","filtered_df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":695},"id":"VMf-9VY25NrG","executionInfo":{"status":"ok","timestamp":1722162818206,"user_tz":-330,"elapsed":436,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"be24fa3a-e670-49c8-84d2-09c5fafe3824"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Name  Year Duration                    Genre  Rating  \\\n","75              3 Idiots  2009     170             Comedy, Drama     8.4   \n","173          A Wednesday  2008     104      Action, Crime, Drama     8.1   \n","981                Anand  1971     122            Drama, Musical     8.3   \n","1009     Andaz Apna Apna  1994     160   Action, Comedy, Romance     8.1   \n","1019           Andhadhun  2018     139       Crime, Drama, Music     8.2   \n","1285          Article 15  2019     130     Crime, Drama, Mystery     8.2   \n","1877              Barfi!  2012     151    Comedy, Drama, Romance     8.1   \n","2065  Bhaag Milkha Bhaag  2013     186   Biography, Drama, Sport     8.2   \n","2412               Black  2005     122                     Drama     8.2   \n","2425        Black Friday  2004     143      Action, Crime, Drama     8.5   \n","\n","       Votes                 Director             Actor 1  \\\n","75    357889          Rajkumar Hirani          Aamir Khan   \n","173    75118            Neeraj Pandey         Anupam Kher   \n","981    31937     Hrishikesh Mukherjee       Rajesh Khanna   \n","1009   50810        Rajkumar Santoshi          Aamir Khan   \n","1019   77901          Sriram Raghavan  Ayushmann Khurrana   \n","1285   25706            Anubhav Sinha  Ayushmann Khurrana   \n","1877   77377              Anurag Basu       Ranbir Kapoor   \n","2065   62636  Rakeysh Omprakash Mehra       Farhan Akhtar   \n","2412   33782    Sanjay Leela Bhansali    Amitabh Bachchan   \n","2425   19493           Anurag Kashyap       Kay Kay Menon   \n","\n","                    Actor 2           Actor 3  \n","75                 Madhavan        Mona Singh  \n","173        Naseeruddin Shah   Jimmy Sheirgill  \n","981        Amitabh Bachchan     Sumita Sanyal  \n","1009            Salman Khan    Raveena Tandon  \n","1019                   Tabu      Radhika Apte  \n","1285                 Nassar       Manoj Pahwa  \n","1877  Priyanka Chopra Jonas     Ileana D'Cruz  \n","2065           Sonam Kapoor    Pawan Malhotra  \n","2412           Rani Mukerji     Shernaz Patel  \n","2425         Pawan Malhotra  Aditya Srivastav  "],"text/html":["\n","  <div id=\"df-995c2dcd-9860-45d6-a3cc-cf8221af3736\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>75</th>\n","      <td>3 Idiots</td>\n","      <td>2009</td>\n","      <td>170</td>\n","      <td>Comedy, Drama</td>\n","      <td>8.4</td>\n","      <td>357889</td>\n","      <td>Rajkumar Hirani</td>\n","      <td>Aamir Khan</td>\n","      <td>Madhavan</td>\n","      <td>Mona Singh</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>A Wednesday</td>\n","      <td>2008</td>\n","      <td>104</td>\n","      <td>Action, Crime, Drama</td>\n","      <td>8.1</td>\n","      <td>75118</td>\n","      <td>Neeraj Pandey</td>\n","      <td>Anupam Kher</td>\n","      <td>Naseeruddin Shah</td>\n","      <td>Jimmy Sheirgill</td>\n","    </tr>\n","    <tr>\n","      <th>981</th>\n","      <td>Anand</td>\n","      <td>1971</td>\n","      <td>122</td>\n","      <td>Drama, Musical</td>\n","      <td>8.3</td>\n","      <td>31937</td>\n","      <td>Hrishikesh Mukherjee</td>\n","      <td>Rajesh Khanna</td>\n","      <td>Amitabh Bachchan</td>\n","      <td>Sumita Sanyal</td>\n","    </tr>\n","    <tr>\n","      <th>1009</th>\n","      <td>Andaz Apna Apna</td>\n","      <td>1994</td>\n","      <td>160</td>\n","      <td>Action, Comedy, Romance</td>\n","      <td>8.1</td>\n","      <td>50810</td>\n","      <td>Rajkumar Santoshi</td>\n","      <td>Aamir Khan</td>\n","      <td>Salman Khan</td>\n","      <td>Raveena Tandon</td>\n","    </tr>\n","    <tr>\n","      <th>1019</th>\n","      <td>Andhadhun</td>\n","      <td>2018</td>\n","      <td>139</td>\n","      <td>Crime, Drama, Music</td>\n","      <td>8.2</td>\n","      <td>77901</td>\n","      <td>Sriram Raghavan</td>\n","      <td>Ayushmann Khurrana</td>\n","      <td>Tabu</td>\n","      <td>Radhika Apte</td>\n","    </tr>\n","    <tr>\n","      <th>1285</th>\n","      <td>Article 15</td>\n","      <td>2019</td>\n","      <td>130</td>\n","      <td>Crime, Drama, Mystery</td>\n","      <td>8.2</td>\n","      <td>25706</td>\n","      <td>Anubhav Sinha</td>\n","      <td>Ayushmann Khurrana</td>\n","      <td>Nassar</td>\n","      <td>Manoj Pahwa</td>\n","    </tr>\n","    <tr>\n","      <th>1877</th>\n","      <td>Barfi!</td>\n","      <td>2012</td>\n","      <td>151</td>\n","      <td>Comedy, Drama, Romance</td>\n","      <td>8.1</td>\n","      <td>77377</td>\n","      <td>Anurag Basu</td>\n","      <td>Ranbir Kapoor</td>\n","      <td>Priyanka Chopra Jonas</td>\n","      <td>Ileana D'Cruz</td>\n","    </tr>\n","    <tr>\n","      <th>2065</th>\n","      <td>Bhaag Milkha Bhaag</td>\n","      <td>2013</td>\n","      <td>186</td>\n","      <td>Biography, Drama, Sport</td>\n","      <td>8.2</td>\n","      <td>62636</td>\n","      <td>Rakeysh Omprakash Mehra</td>\n","      <td>Farhan Akhtar</td>\n","      <td>Sonam Kapoor</td>\n","      <td>Pawan Malhotra</td>\n","    </tr>\n","    <tr>\n","      <th>2412</th>\n","      <td>Black</td>\n","      <td>2005</td>\n","      <td>122</td>\n","      <td>Drama</td>\n","      <td>8.2</td>\n","      <td>33782</td>\n","      <td>Sanjay Leela Bhansali</td>\n","      <td>Amitabh Bachchan</td>\n","      <td>Rani Mukerji</td>\n","      <td>Shernaz Patel</td>\n","    </tr>\n","    <tr>\n","      <th>2425</th>\n","      <td>Black Friday</td>\n","      <td>2004</td>\n","      <td>143</td>\n","      <td>Action, Crime, Drama</td>\n","      <td>8.5</td>\n","      <td>19493</td>\n","      <td>Anurag Kashyap</td>\n","      <td>Kay Kay Menon</td>\n","      <td>Pawan Malhotra</td>\n","      <td>Aditya Srivastav</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-995c2dcd-9860-45d6-a3cc-cf8221af3736')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-995c2dcd-9860-45d6-a3cc-cf8221af3736 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-995c2dcd-9860-45d6-a3cc-cf8221af3736');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8aa866ad-ffc5-4259-b5d3-1da6e2205f92\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8aa866ad-ffc5-4259-b5d3-1da6e2205f92')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8aa866ad-ffc5-4259-b5d3-1da6e2205f92 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_df","summary":"{\n  \"name\": \"filtered_df\",\n  \"rows\": 55,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 55,\n        \"samples\": [\n          \"Masaan\",\n          \"Article 15\",\n          \"Munna Bhai M.B.B.S.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1971,\n        \"max\": 2020,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          2010,\n          2014,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 37,\n        \"samples\": [\n          \"140 \",\n          \"183 \",\n          \"139 \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"Drama, Fantasy, Horror\",\n          \"Drama, Sport\",\n          \"Adventure, Comedy, Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16713066724171236,\n        \"min\": 8.1,\n        \"max\": 9.1,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8.4,\n          8.1,\n          9.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56829,\n        \"min\": 10024,\n        \"max\": 357889,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          24900,\n          25706,\n          75813\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 43,\n        \"samples\": [\n          \"Rahi Anil Barve\",\n          \"Aamir Khan\",\n          \"Neeraj Ghaywan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 37,\n        \"samples\": [\n          \"Naseeruddin Shah\",\n          \"Shahid Kapoor\",\n          \"Ranbir Kapoor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 48,\n        \"samples\": [\n          \"Darsheel Safary\",\n          \"Konkona Sen Sharma\",\n          \"Raghuvir Yadav\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"Raja Chaudhary\",\n          \"Rahul Bhatt\",\n          \"Manjot Singh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.scatterplot(data=filtered_df, x='Rating', y='Votes')\n","plt.title('Rating vs. Votes')\n","plt.xlabel('Rating')\n","plt.ylabel('Votes')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"fiEKxK_o50EM","executionInfo":{"status":"ok","timestamp":1722162874522,"user_tz":-330,"elapsed":552,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"ac7fe100-5fd5-4402-f75e-64ea9039a47a"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Votes')"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["movie_data['Genre'] = movie_data['Genre'].str.split(', ')\n","\n","genre_df = movie_data.explode('Genre')\n","genre_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":721},"id":"TrLA0CEx6CfJ","executionInfo":{"status":"ok","timestamp":1722163117261,"user_tz":-330,"elapsed":1084,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"a409914e-cacc-438c-d548-c79ca683b511"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name  Year Duration    Genre  Rating  \\\n","1      #Gadhvi (He thought he was Gandhi)  2019     109     Drama     7.0   \n","3                                 #Yaaram  2019     110    Comedy     4.4   \n","3                                 #Yaaram  2019     110   Romance     4.4   \n","5                    ...Aur Pyaar Ho Gaya  1997     147    Comedy     4.7   \n","5                    ...Aur Pyaar Ho Gaya  1997     147     Drama     4.7   \n","...                                   ...   ...      ...      ...     ...   \n","15504                 Zulm Ko Jala Doonga  1988    135.0   Action     4.6   \n","15505                               Zulmi  1999     129    Action     4.5   \n","15505                               Zulmi  1999     129     Drama     4.5   \n","15508                        Zulm-O-Sitam  1998     130    Action     6.2   \n","15508                        Zulm-O-Sitam  1998     130     Drama     6.2   \n","\n","       Votes       Director           Actor 1                 Actor 2  \\\n","1          8  Gaurav Bakshi      Rasika Dugal          Vivek Ghamande   \n","3         35     Ovais Khan           Prateik              Ishita Raj   \n","3         35     Ovais Khan           Prateik              Ishita Raj   \n","5        827   Rahul Rawail        Bobby Deol  Aishwarya Rai Bachchan   \n","5        827   Rahul Rawail        Bobby Deol  Aishwarya Rai Bachchan   \n","...      ...            ...               ...                     ...   \n","15504     11  Mahendra Shah  Naseeruddin Shah           Sumeet Saigal   \n","15505    655     Kuku Kohli      Akshay Kumar          Twinkle Khanna   \n","15505    655     Kuku Kohli      Akshay Kumar          Twinkle Khanna   \n","15508     20   K.C. Bokadia        Dharmendra              Jaya Prada   \n","15508     20   K.C. Bokadia        Dharmendra              Jaya Prada   \n","\n","               Actor 3  \n","1        Arvind Jangid  \n","3      Siddhant Kapoor  \n","3      Siddhant Kapoor  \n","5        Shammi Kapoor  \n","5        Shammi Kapoor  \n","...                ...  \n","15504    Suparna Anand  \n","15505      Aruna Irani  \n","15505      Aruna Irani  \n","15508      Arjun Sarja  \n","15508      Arjun Sarja  \n","\n","[15380 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-b578caee-a14a-40e9-9f33-7bb5353b5b58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>2019</td>\n","      <td>109</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>2019</td>\n","      <td>110</td>\n","      <td>Comedy</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>2019</td>\n","      <td>110</td>\n","      <td>Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>1997</td>\n","      <td>147</td>\n","      <td>Comedy</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>1997</td>\n","      <td>147</td>\n","      <td>Drama</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15504</th>\n","      <td>Zulm Ko Jala Doonga</td>\n","      <td>1988</td>\n","      <td>135.0</td>\n","      <td>Action</td>\n","      <td>4.6</td>\n","      <td>11</td>\n","      <td>Mahendra Shah</td>\n","      <td>Naseeruddin Shah</td>\n","      <td>Sumeet Saigal</td>\n","      <td>Suparna Anand</td>\n","    </tr>\n","    <tr>\n","      <th>15505</th>\n","      <td>Zulmi</td>\n","      <td>1999</td>\n","      <td>129</td>\n","      <td>Action</td>\n","      <td>4.5</td>\n","      <td>655</td>\n","      <td>Kuku Kohli</td>\n","      <td>Akshay Kumar</td>\n","      <td>Twinkle Khanna</td>\n","      <td>Aruna Irani</td>\n","    </tr>\n","    <tr>\n","      <th>15505</th>\n","      <td>Zulmi</td>\n","      <td>1999</td>\n","      <td>129</td>\n","      <td>Drama</td>\n","      <td>4.5</td>\n","      <td>655</td>\n","      <td>Kuku Kohli</td>\n","      <td>Akshay Kumar</td>\n","      <td>Twinkle Khanna</td>\n","      <td>Aruna Irani</td>\n","    </tr>\n","    <tr>\n","      <th>15508</th>\n","      <td>Zulm-O-Sitam</td>\n","      <td>1998</td>\n","      <td>130</td>\n","      <td>Action</td>\n","      <td>6.2</td>\n","      <td>20</td>\n","      <td>K.C. Bokadia</td>\n","      <td>Dharmendra</td>\n","      <td>Jaya Prada</td>\n","      <td>Arjun Sarja</td>\n","    </tr>\n","    <tr>\n","      <th>15508</th>\n","      <td>Zulm-O-Sitam</td>\n","      <td>1998</td>\n","      <td>130</td>\n","      <td>Drama</td>\n","      <td>6.2</td>\n","      <td>20</td>\n","      <td>K.C. Bokadia</td>\n","      <td>Dharmendra</td>\n","      <td>Jaya Prada</td>\n","      <td>Arjun Sarja</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15380 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b578caee-a14a-40e9-9f33-7bb5353b5b58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b578caee-a14a-40e9-9f33-7bb5353b5b58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b578caee-a14a-40e9-9f33-7bb5353b5b58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be9b4d05-b64f-4f2f-961b-7b0231775a6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be9b4d05-b64f-4f2f-961b-7b0231775a6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be9b4d05-b64f-4f2f-961b-7b0231775a6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_21f5c10a-f60c-4bcd-80d0-9828159d3fc2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('genre_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_21f5c10a-f60c-4bcd-80d0-9828159d3fc2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('genre_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"genre_df","summary":"{\n  \"name\": \"genre_df\",\n  \"rows\": 15380,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7038,\n        \"samples\": [\n          \"Khoon aur Sazaa\",\n          \"Ada... A Way of Life\",\n          \"Arpan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 1917,\n        \"max\": 2021,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          1977,\n          1998,\n          1992\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"197 \",\n          \"247 \",\n          \"91 \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"Drama\",\n          \"Sci-Fi\",\n          \"Action\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3561366706220006,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          1.9,\n          7.0,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13576,\n        \"min\": 5,\n        \"max\": 591417,\n        \"num_unique_values\": 2030,\n        \"samples\": [\n          1273,\n          667,\n          14142\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2956,\n        \"samples\": [\n          \"Prakash Satam\",\n          \"Sharankumar Chand\",\n          \"Shahab Shamsi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2415,\n        \"samples\": [\n          \"Dilip Dhawan\",\n          \"Kamini Kaushal\",\n          \"Vinay Subramanian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2783,\n        \"samples\": [\n          \"Sasha Aagha\",\n          \"Sonika Chopra\",\n          \"Tanmay Ssingh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3031,\n        \"samples\": [\n          \"Bill 'Blade' Howell\",\n          \"Satyendra Kapoor\",\n          \"Irfan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.countplot(data=genre_df, x='Genre', order=genre_df['Genre'].value_counts().index, palette='viridis')\n","plt.xticks(rotation=90)\n","plt.title('Distribution of Genres')\n","plt.xlabel('Genre')\n","plt.ylabel('Count')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":538},"id":"XqDpDAV669Ie","executionInfo":{"status":"ok","timestamp":1722163386970,"user_tz":-330,"elapsed":1561,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"5353d581-6b0e-449a-8db7-8655ef7a3007"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-48-cb310d8a6ac6>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.countplot(data=genre_df, x='Genre', order=genre_df['Genre'].value_counts().index, palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["average_rating_by_genre = genre_df.groupby('Genre')['Rating'].mean().reset_index()\n","average_rating_by_genre = average_rating_by_genre.sort_values(by='Rating', ascending=False)\n","average_rating_by_genre"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"jKhuZJ2Z79HQ","executionInfo":{"status":"ok","timestamp":1722163450721,"user_tz":-330,"elapsed":607,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"b661e310-5cce-4825-cc3f-83c5e0cd7621"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Genre    Rating\n","15         News  8.000000\n","6   Documentary  7.587755\n","10      History  6.804167\n","3     Biography  6.717187\n","18        Sport  6.380851\n","8        Family  6.172657\n","13      Musical  6.160772\n","12        Music  6.082456\n","7         Drama  5.988834\n","20          War  5.981818\n","2     Animation  5.960000\n","1     Adventure  5.825668\n","9       Fantasy  5.819307\n","14      Mystery  5.792350\n","16      Romance  5.747312\n","4        Comedy  5.728150\n","5         Crime  5.722313\n","19     Thriller  5.531170\n","0        Action  5.426121\n","17       Sci-Fi  5.270588\n","21      Western  5.250000\n","11       Horror  4.764835"],"text/html":["\n","  <div id=\"df-c11c0432-d8ee-4ed9-a820-a56e09779882\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>News</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Documentary</td>\n","      <td>7.587755</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>History</td>\n","      <td>6.804167</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Biography</td>\n","      <td>6.717187</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Sport</td>\n","      <td>6.380851</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Family</td>\n","      <td>6.172657</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Musical</td>\n","      <td>6.160772</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Music</td>\n","      <td>6.082456</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Drama</td>\n","      <td>5.988834</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>War</td>\n","      <td>5.981818</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Animation</td>\n","      <td>5.960000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Adventure</td>\n","      <td>5.825668</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Fantasy</td>\n","      <td>5.819307</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Mystery</td>\n","      <td>5.792350</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Romance</td>\n","      <td>5.747312</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Comedy</td>\n","      <td>5.728150</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Crime</td>\n","      <td>5.722313</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Thriller</td>\n","      <td>5.531170</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Action</td>\n","      <td>5.426121</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Sci-Fi</td>\n","      <td>5.270588</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Western</td>\n","      <td>5.250000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Horror</td>\n","      <td>4.764835</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c11c0432-d8ee-4ed9-a820-a56e09779882')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c11c0432-d8ee-4ed9-a820-a56e09779882 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c11c0432-d8ee-4ed9-a820-a56e09779882');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c98ed5d8-d54d-45f7-8da3-9d0f9846d3fb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c98ed5d8-d54d-45f7-8da3-9d0f9846d3fb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c98ed5d8-d54d-45f7-8da3-9d0f9846d3fb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_626e6b4a-2429-418e-a05e-bddbfe018195\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('average_rating_by_genre')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_626e6b4a-2429-418e-a05e-bddbfe018195 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('average_rating_by_genre');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"average_rating_by_genre","summary":"{\n  \"name\": \"average_rating_by_genre\",\n  \"rows\": 22,\n  \"fields\": [\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"News\",\n          \"Mystery\",\n          \"Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7354529481264755,\n        \"min\": 4.764835164835165,\n        \"max\": 8.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          8.0,\n          5.7923497267759565,\n          5.988833951380305\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 6))\n","sns.barplot(data=average_rating_by_genre,y=\"Rating\",x='Genre',palette='coolwarm')\n","plt.xticks(rotation=90)\n","plt.xlabel('Genre')\n","plt.ylabel('Average Rating')\n","plt.title('Average Rating by Genre')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":549},"id":"7FUHyYKn8PEh","executionInfo":{"status":"ok","timestamp":1722163682096,"user_tz":-330,"elapsed":961,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"3f7ce7a0-e8b5-4836-838f-16e625b90a46"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-51-8d06ecc51799>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=average_rating_by_genre,y=\"Rating\",x='Genre',palette='coolwarm')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","LabelEncoder = LabelEncoder()\n","trans_data['Actor 1'] = LabelEncoder.fit_transform(trans_data['Actor 1'])\n","trans_data['Actor 2']= LabelEncoder().fit_transform(trans_data['Actor 2'])\n","trans_data['Actor 3']= LabelEncoder().fit_transform(trans_data['Actor 3'])\n","trans_data['Genre'] = LabelEncoder().fit_transform(trans_data['Genre'].apply(lambda x: ', '.join(map(str, x))))\n","\n","trans_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"ModYX-Lu9GG6","executionInfo":{"status":"error","timestamp":1722164178846,"user_tz":-330,"elapsed":430,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"40776493-baa0-403b-d894-8edc545c05d9"},"execution_count":54,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'trans_data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-54-8c6af283507f>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mLabelEncoder\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 1'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 1'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrans_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Actor 3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'trans_data' is not defined"]}]},{"source":["from sklearn.preprocessing import LabelEncoder\n","\n","# Create a sample DataFrame (replace this with your actual data)\n","trans_data = {'Actor 1': ['Actor A', 'Actor B', 'Actor C'],\n","              'Actor 2': ['Actor D', 'Actor E', 'Actor F'],\n","              'Actor 3': ['Actor G', 'Actor H', 'Actor I'],\n","              'Genre': [['Action', 'Comedy'], ['Drama'], ['Sci-Fi', 'Thriller']]}\n","trans_data = pd.DataFrame(trans_data)\n","\n","# Initialize the LabelEncoder\n","le = LabelEncoder()\n","\n","# Apply Label Encoding to the columns\n","trans_data['Actor 1'] = le.fit_transform(trans_data['Actor 1'])\n","trans_data['Actor 2']= le.fit_transform(trans_data['Actor 2'])\n","trans_data['Actor 3']= le.fit_transform(trans_data['Actor 3'])\n","trans_data['Genre'] = le.fit_transform(trans_data['Genre'].apply(lambda x: ', '.join(map(str, x))))\n","\n","trans_data.head()"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"EZu9insa_GL3","executionInfo":{"status":"ok","timestamp":1722164212385,"user_tz":-330,"elapsed":418,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"9cb698fe-3bfc-4abe-c8ea-decd40a0a25f"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Actor 1  Actor 2  Actor 3  Genre\n","0        0        0        0      0\n","1        1        1        1      1\n","2        2        2        2      2"],"text/html":["\n","  <div id=\"df-a36590d0-4433-4f7d-b227-8586a7c918b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","      <th>Genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a36590d0-4433-4f7d-b227-8586a7c918b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a36590d0-4433-4f7d-b227-8586a7c918b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a36590d0-4433-4f7d-b227-8586a7c918b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04e739e2-dd59-4f9e-a343-4fd50b805b57\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04e739e2-dd59-4f9e-a343-4fd50b805b57')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04e739e2-dd59-4f9e-a343-4fd50b805b57 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"trans_data","summary":"{\n  \"name\": \"trans_data\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"source":["from sklearn"],"cell_type":"code","metadata":{"id":"5ZCqzFLFAhfY"},"execution_count":null,"outputs":[]},{"source":["from sklearn.preprocessing import MinMaxScaler\n","import pandas as pd\n","\n","# Create a sample DataFrame with a 'Rating' column\n","trans_data = {'Actor 1': ['Actor A', 'Actor B', 'Actor C'],\n","              'Actor 2': ['Actor D', 'Actor E', 'Actor F'],\n","              'Actor 3': ['Actor G', 'Actor H', 'Actor I'],\n","              'Genre': [['Action', 'Comedy'], ['Drama'], ['Sci-Fi', 'Thriller']],\n","              'Rating': [4.5, 3.2, 5.0]} # Added a 'Rating' column with sample data\n","trans_data = pd.DataFrame(trans_data)\n","\n","scaler = MinMaxScaler()\n","trans_data['Rating'] = scaler.fit_transform(trans_data[['Rating']])\n","trans_data"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"DaPq_3KNAiOY","executionInfo":{"status":"ok","timestamp":1722164594185,"user_tz":-330,"elapsed":717,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"a84b0927-b4c9-4e0c-dff8-49862a7e8359"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Actor 1  Actor 2  Actor 3               Genre    Rating\n","0  Actor A  Actor D  Actor G    [Action, Comedy]  0.722222\n","1  Actor B  Actor E  Actor H             [Drama]  0.000000\n","2  Actor C  Actor F  Actor I  [Sci-Fi, Thriller]  1.000000"],"text/html":["\n","  <div id=\"df-7ae6642f-eaab-419d-b9ac-735e81afc2e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Actor A</td>\n","      <td>Actor D</td>\n","      <td>Actor G</td>\n","      <td>[Action, Comedy]</td>\n","      <td>0.722222</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Actor B</td>\n","      <td>Actor E</td>\n","      <td>Actor H</td>\n","      <td>[Drama]</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Actor C</td>\n","      <td>Actor F</td>\n","      <td>Actor I</td>\n","      <td>[Sci-Fi, Thriller]</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ae6642f-eaab-419d-b9ac-735e81afc2e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ae6642f-eaab-419d-b9ac-735e81afc2e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ae6642f-eaab-419d-b9ac-735e81afc2e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-56c3ef8a-e2f5-4d28-8cd7-521cd2ae30f9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56c3ef8a-e2f5-4d28-8cd7-521cd2ae30f9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-56c3ef8a-e2f5-4d28-8cd7-521cd2ae30f9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cddbb5cb-ea39-418e-9348-5636597f0db9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('trans_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cddbb5cb-ea39-418e-9348-5636597f0db9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('trans_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"trans_data","summary":"{\n  \"name\": \"trans_data\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Actor A\",\n          \"Actor B\",\n          \"Actor C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Actor D\",\n          \"Actor E\",\n          \"Actor F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Actor G\",\n          \"Actor H\",\n          \"Actor I\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5161985135098648,\n        \"min\": 0.0,\n        \"max\": 0.9999999999999998,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7222222222222221,\n          0.0,\n          0.9999999999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["corr_df = trans_data.corr(numeric_only= True)\n","corr_df['Rating'].sort_values(ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fbuxh5cEAq8-","executionInfo":{"status":"ok","timestamp":1722164754819,"user_tz":-330,"elapsed":405,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"cbb9b81e-3da3-4187-971e-c5f1aba29f54"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Rating    1.0\n","Name: Rating, dtype: float64"]},"metadata":{},"execution_count":58}]},{"source":["sns.heatmap(corr_df,annot=False,cmap=\"coolwarm\")"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"ujtfp7_OClY0","executionInfo":{"status":"ok","timestamp":1722165127347,"user_tz":-330,"elapsed":1077,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"d0c2eead-fb69-41d3-c3d0-25cd8beeb5ce"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":63},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_squared_error, r2_score"],"metadata":{"id":"B1u60RX8CpWC","executionInfo":{"status":"ok","timestamp":1722165171420,"user_tz":-330,"elapsed":385,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["x = trans_data.drop('Rating',axis=1)\n","y = trans_data['Rating']"],"metadata":{"id":"576VRlY8CxD0","executionInfo":{"status":"ok","timestamp":1722165183128,"user_tz":-330,"elapsed":427,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)"],"metadata":{"id":"yA_tbqTBC1MR","executionInfo":{"status":"ok","timestamp":1722165209269,"user_tz":-330,"elapsed":385,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}}},"execution_count":66,"outputs":[]},{"source":["!pip install pandas\n","import pandas as pd\n","\n","# Check if 'Actor' column exists. If not, identify the correct column name\n","print(trans_data.columns)\n","\n","# Assuming 'CorrectColumnName' is the actual name of the column you want to encode\n","trans_data = pd.get_dummies(trans_data, columns=['CorrectColumnName'])\n","\n","# Now you can recreate x_train and y_train\n","x = trans_data.drop('Rating',axis=1)\n","y = trans_data['Rating']\n","x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)\n","\n","# Now try fitting the model again\n","model = LinearRegression()\n","model.fit(x_train,y_train)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":567},"id":"SzSVCHqBDTDU","executionInfo":{"status":"error","timestamp":1722165317398,"user_tz":-330,"elapsed":3291,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"9c974ea8-a5b4-4a68-c032-cf1855d5115b"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.25.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n","Index(['Actor 1', 'Actor 2', 'Actor 3', 'Genre', 'Rating'], dtype='object')\n"]},{"output_type":"error","ename":"KeyError","evalue":"\"None of [Index(['CorrectColumnName'], dtype='object')] are in the [columns]\"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-69-bc1a02485e50>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Assuming 'CorrectColumnName' is the actual name of the column you want to encode\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mtrans_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_dummies\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrans_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'CorrectColumnName'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Now you can recreate x_train and y_train\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/reshape/encoding.py\u001b[0m in \u001b[0;36mget_dummies\u001b[0;34m(data, prefix, prefix_sep, dummy_na, columns, sparse, drop_first, dtype)\u001b[0m\n\u001b[1;32m    156\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Input must be a list-like for parameter `columns`\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    157\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 158\u001b[0;31m             \u001b[0mdata_to_encode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    159\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    160\u001b[0m         \u001b[0;31m# validate prefixes and separator to avoid silently dropping cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3765\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3766\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3767\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3768\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3769\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   5875\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5876\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5877\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5878\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5879\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   5936\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0muse_interval_msg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5937\u001b[0m                     \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5938\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of [{key}] are in the [{axis_name}]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5939\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5940\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"None of [Index(['CorrectColumnName'], dtype='object')] are in the [columns]\""]}]},{"source":["!pip install pandas\n","!pip install scikit-learn\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","\n","# Check if 'Actor' column exists. If not, identify the correct column name\n","print(trans_data.columns)\n","\n","# Assuming 'Actor' is the correct column name\n","if 'Actor' in trans_data.columns:\n","    # Use one-hot encoding to convert the 'Actor' column to numerical representation\n","    trans_data = pd.get_dummies(trans_data, columns=['Actor'])"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Wgg2U_HDnpC","executionInfo":{"status":"ok","timestamp":1722165405821,"user_tz":-330,"elapsed":8847,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"c480f17f-b39e-4638-91cc-fffae3bf48ff"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.25.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.3.2)\n","Requirement already satisfied: numpy<2.0,>=1.17.3 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.25.2)\n","Requirement already satisfied: scipy>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.13.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.5.0)\n","Index(['Actor 1', 'Actor 2', 'Actor 3', 'Genre', 'Rating'], dtype='object')\n"]}]},{"cell_type":"code","source":["print(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QI7sFFGhDi-C","executionInfo":{"status":"ok","timestamp":1722165422984,"user_tz":-330,"elapsed":407,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"93260da3-080e-492f-a738-0551a9a3d42e"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["0    0.722222\n","Name: Rating, dtype: float64\n"]}]},{"source":["print(x + x_test) # Corrected the variable name to x_test"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"proG-EcuD24s","executionInfo":{"status":"ok","timestamp":1722165460663,"user_tz":-330,"elapsed":417,"user":{"displayName":"pritha guha","userId":"04700360246872876562"}},"outputId":"4a4b4234-c081-415f-e6c8-2ee225d68eb3"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["          Actor 1         Actor 2         Actor 3  \\\n","0  Actor AActor A  Actor DActor D  Actor GActor G   \n","1             NaN             NaN             NaN   \n","2             NaN             NaN             NaN   \n","\n","                              Genre  \n","0  [Action, Comedy, Action, Comedy]  \n","1                               NaN  \n","2                               NaN  \n"]}]}]}